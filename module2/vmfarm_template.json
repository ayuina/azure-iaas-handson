{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "subnetId": {
            "type": "string"
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 4
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        }
    },
    "variables": {
        "vmfarmName": "[concat(parameters('prefix'), '-vmfarm' )]",
        "avSetName": "[concat(variables('vmfarmName'), '-as' )]",
        "vmfarmLbName": "[concat(variables('vmfarmName'), '-lb' )]",
        "vmfarmLbId":"[resourceId('Microsoft.Network/loadBalancers', variables('vmfarmLbName'))]"
    },
    "resources": [
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "name": "[variables('avSetName')]",
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('vmfarmLbName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontend",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendPool1"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('vmfarmLbId'), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('vmfarmLbId'), '/backendAddressPools/BackendPool1')]"
                            },
                            "probe": {
                                "id": "[concat(variables('vmfarmLbId'), '/probes/lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "lbrule"
                    }
                ]
            }
        },
        {
            "copy": {
                "name": "lbNatLoop",
                "count": "[parameters('vmCount')]"
            },
            "apiVersion": "2018-02-01",
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "name": "[concat(variables('vmfarmLbName'), '/', 'SSH-NAT', padLeft(copyIndex(),2,'0'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vmfarmLbId')]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat( variables('vmfarmLbId'), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "protocol": "tcp",
                "frontendPort": "[copyIndex(22000)]",
                "backendPort": 22,
                "enableFloatingIP": false
            }
        },
        {
            "copy": {
                "name": "niccopy",
                "count": "[parameters('vmCount')]"
            },
            "name": "[concat( variables('vmfarmName'), padLeft(copyIndex(),2,'0'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vmfarmLbId')]",
                "[concat(variables('vmfarmLbId'), '/inboundNatRules/SSH-NAT', padLeft(copyIndex(),2,'0'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('vmfarmLbId'), '/backendAddressPools/BackendPool1')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('vmfarmLbId'), '/inboundNatRules/SSH-NAT', padLeft(copyIndex(),2,'0')) ]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('vmCount')]"
            },
            "name": "[concat( variables('vmfarmName'), padLeft(copyIndex(),2,'0')  )]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('vmfarmName'), padLeft(copyIndex(),2,'0'), '-nic')]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('avSetName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat( variables('vmfarmName'), padLeft(copyIndex(),2,'0') )]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat( variables('vmfarmName'), padLeft(copyIndex(),2,'0'), '-osdisk' )]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmfarmName'), padLeft(copyIndex(),2,'0'), '-nic') )]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('avSetName'))]"
                }
            }
        }
    ],
    "outputs": {}
}